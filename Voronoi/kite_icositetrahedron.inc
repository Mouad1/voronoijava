#declare kite_icositetrahedron=mesh2{

vertex_vectors{

50,
<0.0,0.7071067811865,0.7071067811865>,
<-0.546918160678,0.546918160678,0.546918160678>,
<-0.7071067811865,0.0,0.7071067811865>,
<0.0,0.0,1.0>,
<0.7071067811865,0.0,0.7071067811865>,
<0.546918160678,0.546918160678,0.546918160678>,
<0.0,1.0,0.0>,
<-0.7071067811865,0.7071067811865,0.0>,
<-1.0,0.0,0.0>,
<-0.546918160678,-0.546918160678,0.546918160678>,
<0.0,-0.7071067811865,0.7071067811865>,
<0.7071067811865,0.7071067811865,0.0>,
<1.0,0.0,0.0>,
<0.546918160678,-0.546918160678,0.546918160678>,
<0.0,0.7071067811865,-0.7071067811865>,
<-0.546918160678,0.546918160678,-0.546918160678>,
<-0.7071067811865,-0.7071067811865,0.0>,
<-0.7071067811865,0.0,-0.7071067811865>,
<0.0,-1.0,0.0>,
<0.546918160678,0.546918160678,-0.546918160678>,
<0.7071067811865,-0.7071067811865,0.0>,
<0.7071067811865,0.0,-0.7071067811865>,
<0.0,0.0,-1.0>,
<-0.546918160678,-0.546918160678,-0.546918160678>,
<0.0,-0.7071067811865,-0.7071067811865>,
<0.546918160678,-0.546918160678,-0.546918160678>,
<-0.313506235466125,0.313506235466125,0.74028293076275>,
<0.313506235466125,0.313506235466125,0.74028293076275>,
<-0.313506235466125,0.74028293076275,0.313506235466125>,
<-0.74028293076275,0.313506235466125,0.313506235466125>,
<-0.313506235466125,-0.313506235466125,0.74028293076275>,
<0.313506235466125,0.74028293076275,0.313506235466125>,
<0.74028293076275,0.313506235466125,0.313506235466125>,
<0.313506235466125,-0.313506235466125,0.74028293076275>,
<-0.313506235466125,0.74028293076275,-0.313506235466125>,
<-0.74028293076275,-0.313506235466125,0.313506235466125>,
<-0.74028293076275,0.313506235466125,-0.313506235466125>,
<-0.313506235466125,-0.74028293076275,0.313506235466125>,
<0.313506235466125,0.74028293076275,-0.313506235466125>,
<0.74028293076275,-0.313506235466125,0.313506235466125>,
<0.74028293076275,0.313506235466125,-0.313506235466125>,
<0.313506235466125,-0.74028293076275,0.313506235466125>,
<-0.313506235466125,0.313506235466125,-0.74028293076275>,
<-0.74028293076275,-0.313506235466125,-0.313506235466125>,
<-0.313506235466125,-0.74028293076275,-0.313506235466125>,
<0.313506235466125,0.313506235466125,-0.74028293076275>,
<0.74028293076275,-0.313506235466125,-0.313506235466125>,
<0.313506235466125,-0.74028293076275,-0.313506235466125>,
<-0.313506235466125,-0.313506235466125,-0.74028293076275>,
<0.313506235466125,-0.313506235466125,-0.74028293076275>
 }
normal_vectors{

50,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>
 }
/* 
 texture_list{
2,
texture{texture0},
texture{texture1}
 }
*/
face_indices{
96,
<2,1,26>,// ,0,
<1,0,26>,// ,0,
<0,3,26>,// ,1,
<3,2,26>,// ,1,
<0,5,27>,// ,0,
<5,4,27>,// ,0,
<4,3,27>,// ,1,
<3,0,27>,// ,1,
<1,7,28>,// ,0,
<7,6,28>,// ,1,
<6,0,28>,// ,1,
<0,1,28>,// ,0,
<2,8,29>,// ,1,
<8,7,29>,// ,1,
<7,1,29>,// ,0,
<1,2,29>,// ,0,
<3,10,30>,// ,1,
<10,9,30>,// ,0,
<9,2,30>,// ,0,
<2,3,30>,// ,1,
<6,11,31>,// ,1,
<11,5,31>,// ,0,
<5,0,31>,// ,0,
<0,6,31>,// ,1,
<11,12,32>,// ,1,
<12,4,32>,// ,1,
<4,5,32>,// ,0,
<5,11,32>,// ,0,
<13,10,33>,// ,0,
<10,3,33>,// ,1,
<3,4,33>,// ,1,
<4,13,33>,// ,0,
<15,14,34>,// ,0,
<14,6,34>,// ,1,
<6,7,34>,// ,1,
<7,15,34>,// ,0,
<9,16,35>,// ,0,
<16,8,35>,// ,1,
<8,2,35>,// ,1,
<2,9,35>,// ,0,
<17,15,36>,// ,0,
<15,7,36>,// ,0,
<7,8,36>,// ,1,
<8,17,36>,// ,1,
<18,16,37>,// ,1,
<16,9,37>,// ,0,
<9,10,37>,// ,0,
<10,18,37>,// ,1,
<6,14,38>,// ,1,
<14,19,38>,// ,0,
<19,11,38>,// ,0,
<11,6,38>,// ,1,
<12,20,39>,// ,1,
<20,13,39>,// ,0,
<13,4,39>,// ,0,
<4,12,39>,// ,1,
<11,19,40>,// ,0,
<19,21,40>,// ,0,
<21,12,40>,// ,1,
<12,11,40>,// ,1,
<13,20,41>,// ,0,
<20,18,41>,// ,1,
<18,10,41>,// ,1,
<10,13,41>,// ,0,
<15,17,42>,// ,0,
<17,22,42>,// ,1,
<22,14,42>,// ,1,
<14,15,42>,// ,0,
<16,23,43>,// ,0,
<23,17,43>,// ,0,
<17,8,43>,// ,1,
<8,16,43>,// ,1,
<18,24,44>,// ,1,
<24,23,44>,// ,0,
<23,16,44>,// ,0,
<16,18,44>,// ,1,
<22,21,45>,// ,1,
<21,19,45>,// ,0,
<19,14,45>,// ,0,
<14,22,45>,// ,1,
<21,25,46>,// ,0,
<25,20,46>,// ,0,
<20,12,46>,// ,1,
<12,21,46>,// ,1,
<25,24,47>,// ,0,
<24,18,47>,// ,1,
<18,20,47>,// ,1,
<20,25,47>,// ,0,
<23,24,48>,// ,0,
<24,22,48>,// ,1,
<22,17,48>,// ,1,
<17,23,48>,// ,0,
<22,24,49>,// ,1,
<24,25,49>,// ,0,
<25,21,49>,// ,0,
<21,22,49> //1
 } 
 }
#declare aretes=union{

object{cylinder{<0.0,0.7071067811865,0.7071067811865>,<-0.546918160678,0.546918160678,0.546918160678>,diam  }}
object{cylinder{<0.0,0.7071067811865,0.7071067811865>,<0.0,0.0,1.0>,diam  }}
object{cylinder{<0.0,0.7071067811865,0.7071067811865>,<0.546918160678,0.546918160678,0.546918160678>,diam  }}
object{cylinder{<0.0,0.7071067811865,0.7071067811865>,<0.0,1.0,0.0>,diam  }}
object{cylinder{<-0.546918160678,0.546918160678,0.546918160678>,<-0.7071067811865,0.0,0.7071067811865>,diam  }}
object{cylinder{<-0.546918160678,0.546918160678,0.546918160678>,<-0.7071067811865,0.7071067811865,0.0>,diam  }}
object{cylinder{<-0.7071067811865,0.0,0.7071067811865>,<0.0,0.0,1.0>,diam  }}
object{cylinder{<-0.7071067811865,0.0,0.7071067811865>,<-1.0,0.0,0.0>,diam  }}
object{cylinder{<-0.7071067811865,0.0,0.7071067811865>,<-0.546918160678,-0.546918160678,0.546918160678>,diam  }}
object{cylinder{<0.0,0.0,1.0>,<0.7071067811865,0.0,0.7071067811865>,diam  }}
object{cylinder{<0.0,0.0,1.0>,<0.0,-0.7071067811865,0.7071067811865>,diam  }}
object{cylinder{<0.7071067811865,0.0,0.7071067811865>,<0.546918160678,0.546918160678,0.546918160678>,diam  }}
object{cylinder{<0.7071067811865,0.0,0.7071067811865>,<1.0,0.0,0.0>,diam  }}
object{cylinder{<0.7071067811865,0.0,0.7071067811865>,<0.546918160678,-0.546918160678,0.546918160678>,diam  }}
object{cylinder{<0.546918160678,0.546918160678,0.546918160678>,<0.7071067811865,0.7071067811865,0.0>,diam  }}
object{cylinder{<0.0,1.0,0.0>,<-0.7071067811865,0.7071067811865,0.0>,diam  }}
object{cylinder{<0.0,1.0,0.0>,<0.7071067811865,0.7071067811865,0.0>,diam  }}
object{cylinder{<0.0,1.0,0.0>,<0.0,0.7071067811865,-0.7071067811865>,diam  }}
object{cylinder{<-0.7071067811865,0.7071067811865,0.0>,<-1.0,0.0,0.0>,diam  }}
object{cylinder{<-0.7071067811865,0.7071067811865,0.0>,<-0.546918160678,0.546918160678,-0.546918160678>,diam  }}
object{cylinder{<-1.0,0.0,0.0>,<-0.7071067811865,-0.7071067811865,0.0>,diam  }}
object{cylinder{<-1.0,0.0,0.0>,<-0.7071067811865,0.0,-0.7071067811865>,diam  }}
object{cylinder{<-0.546918160678,-0.546918160678,0.546918160678>,<0.0,-0.7071067811865,0.7071067811865>,diam  }}
object{cylinder{<-0.546918160678,-0.546918160678,0.546918160678>,<-0.7071067811865,-0.7071067811865,0.0>,diam  }}
object{cylinder{<0.0,-0.7071067811865,0.7071067811865>,<0.546918160678,-0.546918160678,0.546918160678>,diam  }}
object{cylinder{<0.0,-0.7071067811865,0.7071067811865>,<0.0,-1.0,0.0>,diam  }}
object{cylinder{<0.7071067811865,0.7071067811865,0.0>,<1.0,0.0,0.0>,diam  }}
object{cylinder{<0.7071067811865,0.7071067811865,0.0>,<0.546918160678,0.546918160678,-0.546918160678>,diam  }}
object{cylinder{<1.0,0.0,0.0>,<0.7071067811865,-0.7071067811865,0.0>,diam  }}
object{cylinder{<1.0,0.0,0.0>,<0.7071067811865,0.0,-0.7071067811865>,diam  }}
object{cylinder{<0.546918160678,-0.546918160678,0.546918160678>,<0.7071067811865,-0.7071067811865,0.0>,diam  }}
object{cylinder{<0.0,0.7071067811865,-0.7071067811865>,<-0.546918160678,0.546918160678,-0.546918160678>,diam  }}
object{cylinder{<0.0,0.7071067811865,-0.7071067811865>,<0.546918160678,0.546918160678,-0.546918160678>,diam  }}
object{cylinder{<0.0,0.7071067811865,-0.7071067811865>,<0.0,0.0,-1.0>,diam  }}
object{cylinder{<-0.546918160678,0.546918160678,-0.546918160678>,<-0.7071067811865,0.0,-0.7071067811865>,diam  }}
object{cylinder{<-0.7071067811865,-0.7071067811865,0.0>,<0.0,-1.0,0.0>,diam  }}
object{cylinder{<-0.7071067811865,-0.7071067811865,0.0>,<-0.546918160678,-0.546918160678,-0.546918160678>,diam  }}
object{cylinder{<-0.7071067811865,0.0,-0.7071067811865>,<0.0,0.0,-1.0>,diam  }}
object{cylinder{<-0.7071067811865,0.0,-0.7071067811865>,<-0.546918160678,-0.546918160678,-0.546918160678>,diam  }}
object{cylinder{<0.0,-1.0,0.0>,<0.7071067811865,-0.7071067811865,0.0>,diam  }}
object{cylinder{<0.0,-1.0,0.0>,<0.0,-0.7071067811865,-0.7071067811865>,diam  }}
object{cylinder{<0.546918160678,0.546918160678,-0.546918160678>,<0.7071067811865,0.0,-0.7071067811865>,diam  }}
object{cylinder{<0.7071067811865,-0.7071067811865,0.0>,<0.546918160678,-0.546918160678,-0.546918160678>,diam  }}
object{cylinder{<0.7071067811865,0.0,-0.7071067811865>,<0.0,0.0,-1.0>,diam  }}
object{cylinder{<0.7071067811865,0.0,-0.7071067811865>,<0.546918160678,-0.546918160678,-0.546918160678>,diam  }}
object{cylinder{<0.0,0.0,-1.0>,<0.0,-0.7071067811865,-0.7071067811865>,diam  }}
object{cylinder{<-0.546918160678,-0.546918160678,-0.546918160678>,<0.0,-0.7071067811865,-0.7071067811865>,diam  }}
object{cylinder{<0.0,-0.7071067811865,-0.7071067811865>,<0.546918160678,-0.546918160678,-0.546918160678>,diam  }}
}
#declare sommets=union{

object{sphere{<0.0,0.7071067811865,0.7071067811865>,diam1 }}
object{sphere{<-0.546918160678,0.546918160678,0.546918160678>,diam1 }}
object{sphere{<-0.7071067811865,0.0,0.7071067811865>,diam1 }}
object{sphere{<0.0,0.0,1.0>,diam1 }}
object{sphere{<0.7071067811865,0.0,0.7071067811865>,diam1 }}
object{sphere{<0.546918160678,0.546918160678,0.546918160678>,diam1 }}
object{sphere{<0.0,1.0,0.0>,diam1 }}
object{sphere{<-0.7071067811865,0.7071067811865,0.0>,diam1 }}
object{sphere{<-1.0,0.0,0.0>,diam1 }}
object{sphere{<-0.546918160678,-0.546918160678,0.546918160678>,diam1 }}
object{sphere{<0.0,-0.7071067811865,0.7071067811865>,diam1 }}
object{sphere{<0.7071067811865,0.7071067811865,0.0>,diam1 }}
object{sphere{<1.0,0.0,0.0>,diam1 }}
object{sphere{<0.546918160678,-0.546918160678,0.546918160678>,diam1 }}
object{sphere{<0.0,0.7071067811865,-0.7071067811865>,diam1 }}
object{sphere{<-0.546918160678,0.546918160678,-0.546918160678>,diam1 }}
object{sphere{<-0.7071067811865,-0.7071067811865,0.0>,diam1 }}
object{sphere{<-0.7071067811865,0.0,-0.7071067811865>,diam1 }}
object{sphere{<0.0,-1.0,0.0>,diam1 }}
object{sphere{<0.546918160678,0.546918160678,-0.546918160678>,diam1 }}
object{sphere{<0.7071067811865,-0.7071067811865,0.0>,diam1 }}
object{sphere{<0.7071067811865,0.0,-0.7071067811865>,diam1 }}
object{sphere{<0.0,0.0,-1.0>,diam1 }}
object{sphere{<-0.546918160678,-0.546918160678,-0.546918160678>,diam1 }}
object{sphere{<0.0,-0.7071067811865,-0.7071067811865>,diam1 }}
object{sphere{<0.546918160678,-0.546918160678,-0.546918160678>,diam1 }}
}
#declare maxIndices=48;
#declare trans=array[48];
#declare trans[0]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-74.30014259504154>);
#declare Victor=vrotate(Victor,<0,-16.32494993689405,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-74.30014259504154>);
#declare Hugo=vrotate(Hugo,<0,-16.32494993689405,0>);
#declare transy=<0.273459080339,-0.62701247093225,-0.62701247093225>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -74.30014259504154*z rotate -16.32494993689405*y Axis_Rotate_Trans(Victor,provi)  translate <-0.273459080339,0.62701247093225,0.62701247093225>};
#declare trans[1]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-22.500000000004636>);
#declare Victor=vrotate(Victor,<0,90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-22.500000000004636>);
#declare Hugo=vrotate(Hugo,<0,90.0,0>);
#declare transy=<-0.0,-0.35355339059325,-0.85355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -22.500000000004636*z rotate 90.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.0,0.35355339059325,0.85355339059325>};
#declare trans[2]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-74.30014259504154>);
#declare Victor=vrotate(Victor,<0,-163.67505006310594,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-74.30014259504154>);
#declare Hugo=vrotate(Hugo,<0,-163.67505006310594,0>);
#declare transy=<-0.273459080339,-0.62701247093225,-0.62701247093225>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -74.30014259504154*z rotate -163.67505006310594*y Axis_Rotate_Trans(Victor,provi)  translate <0.273459080339,0.62701247093225,0.62701247093225>};
#declare trans[3]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-112.50000000000465>);
#declare Victor=vrotate(Victor,<0,-90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-112.50000000000465>);
#declare Hugo=vrotate(Hugo,<0,-90.0,0>);
#declare transy=<-0.0,-0.85355339059325,-0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -112.50000000000465*z rotate -90.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.0,0.85355339059325,0.35355339059325>};
#declare trans[4]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-22.49999999999842>);
#declare Victor=vrotate(Victor,<0,45.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-22.49999999999842>);
#declare Hugo=vrotate(Hugo,<0,45.0,0>);
#declare transy=<0.62701247093225,-0.273459080339,-0.62701247093225>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -22.49999999999842*z rotate 45.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.62701247093225,0.273459080339,0.62701247093225>};
#declare trans[5]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-105.69985740495845>);
#declare Victor=vrotate(Victor,<0,-73.67505006310597,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-105.69985740495845>);
#declare Hugo=vrotate(Hugo,<0,-73.67505006310597,0>);
#declare transy=<0.62701247093225,-0.62701247093225,-0.273459080339>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -105.69985740495845*z rotate -73.67505006310597*y Axis_Rotate_Trans(Victor,provi)  translate <-0.62701247093225,0.62701247093225,0.273459080339>};
#declare trans[6]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,157.49999999999537,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,157.49999999999537,0>);
#declare transy=<0.35355339059325,-0.0,-0.85355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -90.0*z rotate 157.49999999999537*y Axis_Rotate_Trans(Victor,provi)  translate <-0.35355339059325,0.0,0.85355339059325>};
#declare trans[7]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-67.49999999999537,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-67.49999999999537,0>);
#declare transy=<0.85355339059325,-0.0,-0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -90.0*z rotate -67.49999999999537*y Axis_Rotate_Trans(Victor,provi)  translate <-0.85355339059325,0.0,0.35355339059325>};
#declare trans[8]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-22.499999999998444>);
#declare Victor=vrotate(Victor,<0,-135.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-22.499999999998444>);
#declare Hugo=vrotate(Hugo,<0,-135.0,0>);
#declare transy=<0.62701247093225,0.273459080339,-0.62701247093225>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -22.499999999998444*z rotate -135.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.62701247093225,-0.273459080339,0.62701247093225>};
#declare trans[9]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-157.49999999999534,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-157.49999999999534,0>);
#declare transy=<-0.35355339059325,-0.0,-0.85355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -90.0*z rotate -157.49999999999534*y Axis_Rotate_Trans(Victor,provi)  translate <0.35355339059325,0.0,0.85355339059325>};
#declare trans[10]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-22.50000000000465>);
#declare Victor=vrotate(Victor,<0,-90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-22.50000000000465>);
#declare Hugo=vrotate(Hugo,<0,-90.0,0>);
#declare transy=<-0.0,0.35355339059325,-0.85355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -22.50000000000465*z rotate -90.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.0,-0.35355339059325,0.85355339059325>};
#declare trans[11]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-157.50000000000153>);
#declare Victor=vrotate(Victor,<0,-45.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-157.50000000000153>);
#declare Hugo=vrotate(Hugo,<0,-45.0,0>);
#declare transy=<-0.62701247093225,-0.273459080339,-0.62701247093225>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -157.50000000000153*z rotate -45.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.62701247093225,0.273459080339,0.62701247093225>};
#declare trans[12]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-112.50000000000465,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-112.50000000000465,0>);
#declare transy=<-0.85355339059325,-0.0,-0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -90.0*z rotate -112.50000000000465*y Axis_Rotate_Trans(Victor,provi)  translate <0.85355339059325,0.0,0.35355339059325>};
#declare trans[13]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-22.499999999998444>);
#declare Victor=vrotate(Victor,<0,-45.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-22.499999999998444>);
#declare Hugo=vrotate(Hugo,<0,-45.0,0>);
#declare transy=<-0.62701247093225,0.273459080339,-0.62701247093225>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -22.499999999998444*z rotate -45.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.62701247093225,-0.273459080339,0.62701247093225>};
#declare trans[14]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-105.69985740495845>);
#declare Victor=vrotate(Victor,<0,-106.32494993689404,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-105.69985740495845>);
#declare Hugo=vrotate(Hugo,<0,-106.32494993689404,0>);
#declare transy=<-0.62701247093225,-0.62701247093225,-0.273459080339>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -105.69985740495845*z rotate -106.32494993689404*y Axis_Rotate_Trans(Victor,provi)  translate <0.62701247093225,0.62701247093225,0.273459080339>};
#declare trans[15]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-67.49999999999535>);
#declare Victor=vrotate(Victor,<0,-0.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-67.49999999999535>);
#declare Hugo=vrotate(Hugo,<0,-0.0,0>);
#declare transy=<0.35355339059325,-0.85355339059325,-0.0>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -67.49999999999535*z rotate -0.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.35355339059325,0.85355339059325,0.0>};
#declare trans[16]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-67.49999999999535>);
#declare Victor=vrotate(Victor,<0,-180.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-67.49999999999535>);
#declare Hugo=vrotate(Hugo,<0,-180.0,0>);
#declare transy=<-0.35355339059325,-0.85355339059325,-0.0>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -67.49999999999535*z rotate -180.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.35355339059325,0.85355339059325,0.0>};
#declare trans[17]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-67.49999999999535>);
#declare Victor=vrotate(Victor,<0,-90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-67.49999999999535>);
#declare Hugo=vrotate(Hugo,<0,-90.0,0>);
#declare transy=<-0.0,-0.85355339059325,0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -67.49999999999535*z rotate -90.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.0,0.85355339059325,-0.35355339059325>};
#declare trans[18]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-22.500000000004636>);
#declare Victor=vrotate(Victor,<0,-0.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-22.500000000004636>);
#declare Hugo=vrotate(Hugo,<0,-0.0,0>);
#declare transy=<0.85355339059325,-0.35355339059325,-0.0>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -22.500000000004636*z rotate -0.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.85355339059325,0.35355339059325,0.0>};
#declare trans[19]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-74.30014259504154>);
#declare Victor=vrotate(Victor,<0,-106.32494993689406,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-74.30014259504154>);
#declare Hugo=vrotate(Hugo,<0,-106.32494993689406,0>);
#declare transy=<0.62701247093225,-0.62701247093225,0.273459080339>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -74.30014259504154*z rotate -106.32494993689406*y Axis_Rotate_Trans(Victor,provi)  translate <-0.62701247093225,0.62701247093225,-0.273459080339>};
#declare trans[20]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-22.50000000000465>);
#declare Victor=vrotate(Victor,<0,-180.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-22.50000000000465>);
#declare Hugo=vrotate(Hugo,<0,-180.0,0>);
#declare transy=<0.85355339059325,0.35355339059325,-0.0>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -22.50000000000465*z rotate -180.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.85355339059325,-0.35355339059325,0.0>};
#declare trans[21]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-112.50000000000465,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-112.50000000000465,0>);
#declare transy=<0.85355339059325,-0.0,0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -90.0*z rotate -112.50000000000465*y Axis_Rotate_Trans(Victor,provi)  translate <-0.85355339059325,0.0,-0.35355339059325>};
#declare trans[22]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-74.30014259504155>);
#declare Victor=vrotate(Victor,<0,163.675050063106,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-74.30014259504155>);
#declare Hugo=vrotate(Hugo,<0,163.675050063106,0>);
#declare transy=<0.273459080339,0.62701247093225,-0.62701247093225>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -74.30014259504155*z rotate 163.675050063106*y Axis_Rotate_Trans(Victor,provi)  translate <-0.273459080339,-0.62701247093225,0.62701247093225>};
#declare trans[23]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-74.30014259504155>);
#declare Victor=vrotate(Victor,<0,-73.67505006310597,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-74.30014259504155>);
#declare Hugo=vrotate(Hugo,<0,-73.67505006310597,0>);
#declare transy=<0.62701247093225,0.62701247093225,-0.273459080339>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -74.30014259504155*z rotate -73.67505006310597*y Axis_Rotate_Trans(Victor,provi)  translate <-0.62701247093225,-0.62701247093225,0.273459080339>};
#declare trans[24]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-105.69985740495848>);
#declare Victor=vrotate(Victor,<0,-163.67505006310594,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-105.69985740495848>);
#declare Hugo=vrotate(Hugo,<0,-163.67505006310594,0>);
#declare transy=<-0.273459080339,0.62701247093225,-0.62701247093225>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -105.69985740495848*z rotate -163.67505006310594*y Axis_Rotate_Trans(Victor,provi)  translate <0.273459080339,-0.62701247093225,0.62701247093225>};
#declare trans[25]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-67.49999999999537>);
#declare Victor=vrotate(Victor,<0,-90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-67.49999999999537>);
#declare Hugo=vrotate(Hugo,<0,-90.0,0>);
#declare transy=<-0.0,0.85355339059325,-0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -67.49999999999537*z rotate -90.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.0,-0.85355339059325,0.35355339059325>};
#declare trans[26]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-22.500000000004636>);
#declare Victor=vrotate(Victor,<0,-180.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-22.500000000004636>);
#declare Hugo=vrotate(Hugo,<0,-180.0,0>);
#declare transy=<-0.85355339059325,-0.35355339059325,-0.0>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -22.500000000004636*z rotate -180.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.85355339059325,0.35355339059325,0.0>};
#declare trans[27]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-74.30014259504154>);
#declare Victor=vrotate(Victor,<0,-73.67505006310594,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-74.30014259504154>);
#declare Hugo=vrotate(Hugo,<0,-73.67505006310594,0>);
#declare transy=<-0.62701247093225,-0.62701247093225,0.273459080339>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -74.30014259504154*z rotate -73.67505006310594*y Axis_Rotate_Trans(Victor,provi)  translate <0.62701247093225,0.62701247093225,-0.273459080339>};
#declare trans[28]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-22.50000000000465>);
#declare Victor=vrotate(Victor,<0,-0.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-22.50000000000465>);
#declare Hugo=vrotate(Hugo,<0,-0.0,0>);
#declare transy=<-0.85355339059325,0.35355339059325,-0.0>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -22.50000000000465*z rotate -0.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.85355339059325,-0.35355339059325,0.0>};
#declare trans[29]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-67.49999999999535,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-67.49999999999535,0>);
#declare transy=<-0.85355339059325,-0.0,0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -90.0*z rotate -67.49999999999535*y Axis_Rotate_Trans(Victor,provi)  translate <0.85355339059325,0.0,-0.35355339059325>};
#declare trans[30]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-74.30014259504155>);
#declare Victor=vrotate(Victor,<0,-106.32494993689404,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-74.30014259504155>);
#declare Hugo=vrotate(Hugo,<0,-106.32494993689404,0>);
#declare transy=<-0.62701247093225,0.62701247093225,-0.273459080339>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -74.30014259504155*z rotate -106.32494993689404*y Axis_Rotate_Trans(Victor,provi)  translate <0.62701247093225,-0.62701247093225,0.273459080339>};
#declare trans[31]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-74.30014259504154>);
#declare Victor=vrotate(Victor,<0,16.32494993689405,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-74.30014259504154>);
#declare Hugo=vrotate(Hugo,<0,16.32494993689405,0>);
#declare transy=<0.273459080339,-0.62701247093225,0.62701247093225>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -74.30014259504154*z rotate 16.32494993689405*y Axis_Rotate_Trans(Victor,provi)  translate <-0.273459080339,0.62701247093225,-0.62701247093225>};
#declare trans[32]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-74.30014259504154>);
#declare Victor=vrotate(Victor,<0,163.67505006310594,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-74.30014259504154>);
#declare Hugo=vrotate(Hugo,<0,163.67505006310594,0>);
#declare transy=<-0.273459080339,-0.62701247093225,0.62701247093225>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -74.30014259504154*z rotate 163.67505006310594*y Axis_Rotate_Trans(Victor,provi)  translate <0.273459080339,0.62701247093225,-0.62701247093225>};
#declare trans[33]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-22.500000000004636>);
#declare Victor=vrotate(Victor,<0,-90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-22.500000000004636>);
#declare Hugo=vrotate(Hugo,<0,-90.0,0>);
#declare transy=<-0.0,-0.35355339059325,0.85355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -22.500000000004636*z rotate -90.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.0,0.35355339059325,-0.85355339059325>};
#declare trans[34]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-22.49999999999842>);
#declare Victor=vrotate(Victor,<0,-45.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-22.49999999999842>);
#declare Hugo=vrotate(Hugo,<0,-45.0,0>);
#declare transy=<0.62701247093225,-0.273459080339,0.62701247093225>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -22.49999999999842*z rotate -45.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.62701247093225,0.273459080339,-0.62701247093225>};
#declare trans[35]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-67.49999999999537>);
#declare Victor=vrotate(Victor,<0,-180.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-67.49999999999537>);
#declare Hugo=vrotate(Hugo,<0,-180.0,0>);
#declare transy=<0.35355339059325,0.85355339059325,-0.0>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -67.49999999999537*z rotate -180.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.35355339059325,-0.85355339059325,0.0>};
#declare trans[36]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-105.69985740495848>);
#declare Victor=vrotate(Victor,<0,-106.32494993689406,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-105.69985740495848>);
#declare Hugo=vrotate(Hugo,<0,-106.32494993689406,0>);
#declare transy=<0.62701247093225,0.62701247093225,0.273459080339>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -105.69985740495848*z rotate -106.32494993689406*y Axis_Rotate_Trans(Victor,provi)  translate <-0.62701247093225,-0.62701247093225,-0.273459080339>};
#declare trans[37]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-157.49999999999537,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-157.49999999999537,0>);
#declare transy=<0.35355339059325,-0.0,0.85355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -90.0*z rotate -157.49999999999537*y Axis_Rotate_Trans(Victor,provi)  translate <-0.35355339059325,0.0,-0.85355339059325>};
#declare trans[38]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-22.499999999998444>);
#declare Victor=vrotate(Victor,<0,135.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-22.499999999998444>);
#declare Hugo=vrotate(Hugo,<0,135.0,0>);
#declare transy=<0.62701247093225,0.273459080339,0.62701247093225>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -22.499999999998444*z rotate 135.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.62701247093225,-0.273459080339,-0.62701247093225>};
#declare trans[39]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-112.50000000000465>);
#declare Victor=vrotate(Victor,<0,-180.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-112.50000000000465>);
#declare Hugo=vrotate(Hugo,<0,-180.0,0>);
#declare transy=<-0.35355339059325,0.85355339059325,-0.0>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -112.50000000000465*z rotate -180.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.35355339059325,-0.85355339059325,0.0>};
#declare trans[40]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-112.50000000000465>);
#declare Victor=vrotate(Victor,<0,-90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-112.50000000000465>);
#declare Hugo=vrotate(Hugo,<0,-90.0,0>);
#declare transy=<-0.0,0.85355339059325,0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -112.50000000000465*z rotate -90.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.0,-0.85355339059325,-0.35355339059325>};
#declare trans[41]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-22.49999999999842>);
#declare Victor=vrotate(Victor,<0,-135.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-22.49999999999842>);
#declare Hugo=vrotate(Hugo,<0,-135.0,0>);
#declare transy=<-0.62701247093225,-0.273459080339,0.62701247093225>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -22.49999999999842*z rotate -135.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.62701247093225,0.273459080339,-0.62701247093225>};
#declare trans[42]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-105.69985740495848>);
#declare Victor=vrotate(Victor,<0,-73.67505006310594,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-105.69985740495848>);
#declare Hugo=vrotate(Hugo,<0,-73.67505006310594,0>);
#declare transy=<-0.62701247093225,0.62701247093225,0.273459080339>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -105.69985740495848*z rotate -73.67505006310594*y Axis_Rotate_Trans(Victor,provi)  translate <0.62701247093225,-0.62701247093225,-0.273459080339>};
#declare trans[43]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-22.500000000004636,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-22.500000000004636,0>);
#declare transy=<-0.35355339059325,-0.0,0.85355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -90.0*z rotate -22.500000000004636*y Axis_Rotate_Trans(Victor,provi)  translate <0.35355339059325,0.0,-0.85355339059325>};
#declare trans[44]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-22.499999999998444>);
#declare Victor=vrotate(Victor,<0,45.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-22.499999999998444>);
#declare Hugo=vrotate(Hugo,<0,45.0,0>);
#declare transy=<-0.62701247093225,0.273459080339,0.62701247093225>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -22.499999999998444*z rotate 45.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.62701247093225,-0.273459080339,-0.62701247093225>};
#declare trans[45]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-22.50000000000465>);
#declare Victor=vrotate(Victor,<0,90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-22.50000000000465>);
#declare Hugo=vrotate(Hugo,<0,90.0,0>);
#declare transy=<-0.0,0.35355339059325,0.85355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999959035893149 rotate -22.50000000000465*z rotate 90.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.0,-0.35355339059325,-0.85355339059325>};
#declare trans[46]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-74.30014259504155>);
#declare Victor=vrotate(Victor,<0,-163.675050063106,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-74.30014259504155>);
#declare Hugo=vrotate(Hugo,<0,-163.675050063106,0>);
#declare transy=<0.273459080339,0.62701247093225,0.62701247093225>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -74.30014259504155*z rotate -163.675050063106*y Axis_Rotate_Trans(Victor,provi)  translate <-0.273459080339,-0.62701247093225,-0.62701247093225>};
#declare trans[47]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-105.69985740495848>);
#declare Victor=vrotate(Victor,<0,163.67505006310594,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-105.69985740495848>);
#declare Hugo=vrotate(Hugo,<0,163.67505006310594,0>);
#declare transy=<-0.273459080339,0.62701247093225,0.62701247093225>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.7734559119329512 rotate -105.69985740495848*z rotate 163.67505006310594*y Axis_Rotate_Trans(Victor,provi)  translate <0.273459080339,-0.62701247093225,-0.62701247093225>};
#declare maxFaces=24;
#declare transface=array[24];
#declare transface[0]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-135.0>);
#declare Victor=vrotate(Victor,<0,-180.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-135.0>);
#declare Hugo=vrotate(Hugo,<0,-180.0,0>);
#declare transy=<0.35355339059325,-0.35355339059325,-0.7071067811865>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -135.0*z rotate -180.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.35355339059325,0.35355339059325,0.7071067811865>};
#declare transface[1]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-45.0>);
#declare Victor=vrotate(Victor,<0,-180.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-45.0>);
#declare Hugo=vrotate(Hugo,<0,-180.0,0>);
#declare transy=<-0.35355339059325,-0.35355339059325,-0.7071067811865>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -45.0*z rotate -180.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.35355339059325,0.35355339059325,0.7071067811865>};
#declare transface[2]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,135.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,135.0,0>);
#declare transy=<0.35355339059325,-0.7071067811865,-0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -90.0*z rotate 135.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.35355339059325,0.7071067811865,0.35355339059325>};
#declare transface[3]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-135.0>);
#declare Victor=vrotate(Victor,<0,-90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-135.0>);
#declare Hugo=vrotate(Hugo,<0,-90.0,0>);
#declare transy=<0.7071067811865,-0.35355339059325,-0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -135.0*z rotate -90.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.7071067811865,0.35355339059325,0.35355339059325>};
#declare transface[4]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-135.0>);
#declare Victor=vrotate(Victor,<0,-0.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-135.0>);
#declare Hugo=vrotate(Hugo,<0,-0.0,0>);
#declare transy=<0.35355339059325,0.35355339059325,-0.7071067811865>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -135.0*z rotate -0.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.35355339059325,-0.35355339059325,0.7071067811865>};
#declare transface[5]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,45.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,45.0,0>);
#declare transy=<-0.35355339059325,-0.7071067811865,-0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -90.0*z rotate 45.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.35355339059325,0.7071067811865,0.35355339059325>};
#declare transface[6]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-45.0>);
#declare Victor=vrotate(Victor,<0,90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-45.0>);
#declare Hugo=vrotate(Hugo,<0,90.0,0>);
#declare transy=<-0.7071067811865,-0.35355339059325,-0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -45.0*z rotate 90.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.7071067811865,0.35355339059325,0.35355339059325>};
#declare transface[7]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-135.0>);
#declare Victor=vrotate(Victor,<0,-180.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-135.0>);
#declare Hugo=vrotate(Hugo,<0,-180.0,0>);
#declare transy=<-0.35355339059325,0.35355339059325,-0.7071067811865>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -135.0*z rotate -180.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.35355339059325,-0.35355339059325,0.7071067811865>};
#declare transface[8]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,45.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,45.0,0>);
#declare transy=<0.35355339059325,-0.7071067811865,0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -90.0*z rotate 45.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.35355339059325,0.7071067811865,-0.35355339059325>};
#declare transface[9]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-135.0>);
#declare Victor=vrotate(Victor,<0,90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-135.0>);
#declare Hugo=vrotate(Hugo,<0,90.0,0>);
#declare transy=<0.7071067811865,0.35355339059325,-0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -135.0*z rotate 90.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.7071067811865,-0.35355339059325,0.35355339059325>};
#declare transface[10]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-135.0>);
#declare Victor=vrotate(Victor,<0,90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-135.0>);
#declare Hugo=vrotate(Hugo,<0,90.0,0>);
#declare transy=<0.7071067811865,-0.35355339059325,0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -135.0*z rotate 90.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.7071067811865,0.35355339059325,-0.35355339059325>};
#declare transface[11]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,135.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,135.0,0>);
#declare transy=<0.35355339059325,0.7071067811865,-0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -90.0*z rotate 135.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.35355339059325,-0.7071067811865,0.35355339059325>};
#declare transface[12]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,135.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,135.0,0>);
#declare transy=<-0.35355339059325,-0.7071067811865,0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -90.0*z rotate 135.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.35355339059325,0.7071067811865,-0.35355339059325>};
#declare transface[13]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-135.0>);
#declare Victor=vrotate(Victor,<0,90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-135.0>);
#declare Hugo=vrotate(Hugo,<0,90.0,0>);
#declare transy=<-0.7071067811865,0.35355339059325,-0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -135.0*z rotate 90.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.7071067811865,-0.35355339059325,0.35355339059325>};
#declare transface[14]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-45.0>);
#declare Victor=vrotate(Victor,<0,-90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-45.0>);
#declare Hugo=vrotate(Hugo,<0,-90.0,0>);
#declare transy=<-0.7071067811865,-0.35355339059325,0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -45.0*z rotate -90.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.7071067811865,0.35355339059325,-0.35355339059325>};
#declare transface[15]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,45.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,45.0,0>);
#declare transy=<-0.35355339059325,0.7071067811865,-0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -90.0*z rotate 45.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.35355339059325,-0.7071067811865,0.35355339059325>};
#declare transface[16]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-135.0>);
#declare Victor=vrotate(Victor,<0,-180.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-135.0>);
#declare Hugo=vrotate(Hugo,<0,-180.0,0>);
#declare transy=<0.35355339059325,-0.35355339059325,0.7071067811865>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -135.0*z rotate -180.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.35355339059325,0.35355339059325,-0.7071067811865>};
#declare transface[17]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-135.0>);
#declare Victor=vrotate(Victor,<0,-90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-135.0>);
#declare Hugo=vrotate(Hugo,<0,-90.0,0>);
#declare transy=<0.7071067811865,0.35355339059325,0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -135.0*z rotate -90.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.7071067811865,-0.35355339059325,-0.35355339059325>};
#declare transface[18]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,45.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,45.0,0>);
#declare transy=<0.35355339059325,0.7071067811865,0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -90.0*z rotate 45.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.35355339059325,-0.7071067811865,-0.35355339059325>};
#declare transface[19]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-135.0>);
#declare Victor=vrotate(Victor,<0,-0.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-135.0>);
#declare Hugo=vrotate(Hugo,<0,-0.0,0>);
#declare transy=<-0.35355339059325,-0.35355339059325,0.7071067811865>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -135.0*z rotate -0.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.35355339059325,0.35355339059325,-0.7071067811865>};
#declare transface[20]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-45.0>);
#declare Victor=vrotate(Victor,<0,90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-45.0>);
#declare Hugo=vrotate(Hugo,<0,90.0,0>);
#declare transy=<-0.7071067811865,0.35355339059325,0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -45.0*z rotate 90.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.7071067811865,-0.35355339059325,-0.35355339059325>};
#declare transface[21]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,135.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,135.0,0>);
#declare transy=<-0.35355339059325,0.7071067811865,0.35355339059325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -90.0*z rotate 135.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.35355339059325,-0.7071067811865,-0.35355339059325>};
#declare transface[22]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-135.0>);
#declare Victor=vrotate(Victor,<0,-0.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-135.0>);
#declare Hugo=vrotate(Hugo,<0,-0.0,0>);
#declare transy=<0.35355339059325,0.35355339059325,0.7071067811865>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -135.0*z rotate -0.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.35355339059325,-0.35355339059325,-0.7071067811865>};
#declare transface[23]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-135.0>);
#declare Victor=vrotate(Victor,<0,-180.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-135.0>);
#declare Hugo=vrotate(Hugo,<0,-180.0,0>);
#declare transy=<-0.35355339059325,0.35355339059325,0.7071067811865>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -135.0*z rotate -180.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.35355339059325,-0.35355339059325,-0.7071067811865>};
#declare nbVertices=26;
#declare lesVertices=array[nbVertices];
#declare lesVertices[0]=<0.0,0.7071067811865,0.7071067811865>;
#declare lesVertices[1]=<-0.546918160678,0.546918160678,0.546918160678>;
#declare lesVertices[2]=<-0.7071067811865,0.0,0.7071067811865>;
#declare lesVertices[3]=<0.0,0.0,1.0>;
#declare lesVertices[4]=<0.7071067811865,0.0,0.7071067811865>;
#declare lesVertices[5]=<0.546918160678,0.546918160678,0.546918160678>;
#declare lesVertices[6]=<0.0,1.0,0.0>;
#declare lesVertices[7]=<-0.7071067811865,0.7071067811865,0.0>;
#declare lesVertices[8]=<-1.0,0.0,0.0>;
#declare lesVertices[9]=<-0.546918160678,-0.546918160678,0.546918160678>;
#declare lesVertices[10]=<0.0,-0.7071067811865,0.7071067811865>;
#declare lesVertices[11]=<0.7071067811865,0.7071067811865,0.0>;
#declare lesVertices[12]=<1.0,0.0,0.0>;
#declare lesVertices[13]=<0.546918160678,-0.546918160678,0.546918160678>;
#declare lesVertices[14]=<0.0,0.7071067811865,-0.7071067811865>;
#declare lesVertices[15]=<-0.546918160678,0.546918160678,-0.546918160678>;
#declare lesVertices[16]=<-0.7071067811865,-0.7071067811865,0.0>;
#declare lesVertices[17]=<-0.7071067811865,0.0,-0.7071067811865>;
#declare lesVertices[18]=<0.0,-1.0,0.0>;
#declare lesVertices[19]=<0.546918160678,0.546918160678,-0.546918160678>;
#declare lesVertices[20]=<0.7071067811865,-0.7071067811865,0.0>;
#declare lesVertices[21]=<0.7071067811865,0.0,-0.7071067811865>;
#declare lesVertices[22]=<0.0,0.0,-1.0>;
#declare lesVertices[23]=<-0.546918160678,-0.546918160678,-0.546918160678>;
#declare lesVertices[24]=<0.0,-0.7071067811865,-0.7071067811865>;
#declare lesVertices[25]=<0.546918160678,-0.546918160678,-0.546918160678>;
