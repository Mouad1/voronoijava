#declare icosidodecahedron=mesh2{

vertex_vectors{

42,
<0.0,0.0,1.051462>,
<0.618034,0.0,0.8506508>,
<0.2763932,0.5527864,0.8506508>,
<-0.618034,0.0,0.8506508>,
<-0.2763932,-0.5527864,0.8506508>,
<1.0,0.0,0.3249197>,
<0.7236068,-0.5527864,0.5257311>,
<-0.1708204,0.8944272,0.5257311>,
<0.4472136,0.8944272,0.3249197>,
<-1.0,0.0,0.3249197>,
<-0.7236068,0.5527864,0.5257311>,
<0.1708204,-0.8944272,0.5257311>,
<-0.4472136,-0.8944272,0.3249197>,
<1.0,0.0,-0.3249197>,
<0.8944272,0.5527864,0.0>,
<0.5527864,-0.8944272,0.0>,
<-0.5527864,0.8944272,0.0>,
<0.4472136,0.8944272,-0.3249197>,
<-1.0,0.0,-0.3249197>,
<-0.8944272,-0.5527864,0.0>,
<-0.4472136,-0.8944272,-0.3249197>,
<0.618034,0.0,-0.8506508>,
<0.7236068,-0.5527864,-0.5257311>,
<0.1708204,-0.8944272,-0.5257311>,
<-0.7236068,0.5527864,-0.5257311>,
<-0.1708204,0.8944272,-0.5257311>,
<0.2763932,0.5527864,-0.8506508>,
<-0.618034,0.0,-0.8506508>,
<-0.2763932,-0.5527864,-0.8506508>,
<0.0,0.0,-1.051462>,
<-0.2472136,0.4,0.7608451600000001>,
<0.2472136,-0.4,0.7608451600000001>,
<0.6472136,0.4,0.47022820000000004>,
<-0.6472136,-0.4,0.47022820000000004>,
<0.8,-0.4,1.1102230246251566E-17>,
<-5.551115123125783E-18,0.8944272,0.0>,
<-0.8,0.4,1.1102230246251566E-17>,
<5.551115123125783E-18,-0.8944272,0.0>,
<0.6472136000000001,0.4,-0.47022820000000004>,
<-0.6472136000000001,-0.4,-0.47022820000000004>,
<0.2472136,-0.4,-0.76084516>,
<-0.2472136,0.4,-0.7608451599999999>
 }
normal_vectors{

42,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>,
<0.0,0.0,0.0>
 }
/* 
 texture_list{
2,
texture{texture0},
texture{texture1}
 }
*/
face_indices{
80,
<2,1,0>,// ,1,
<4,3,0>,// ,1,
<5,6,1>,// ,1,
<7,8,2>,// ,1,
<9,10,3>,// ,1,
<11,12,4>,// ,1,
<14,13,5>,// ,1,
<15,11,6>,// ,1,
<10,16,7>,// ,1,
<17,14,8>,// ,1,
<19,18,9>,// ,1,
<20,19,12>,// ,1,
<21,22,13>,// ,1,
<22,23,15>,// ,1,
<24,25,16>,// ,1,
<25,26,17>,// ,1,
<27,24,18>,// ,1,
<23,28,20>,// ,1,
<26,29,21>,// ,1,
<28,29,27>,// ,1,
<3,10,30>,// ,0,
<10,7,30>,// ,0,
<7,2,30>,// ,0,
<2,0,30>,// ,0,
<0,3,30>,// ,0,
<1,6,31>,// ,0,
<6,11,31>,// ,0,
<11,4,31>,// ,0,
<4,0,31>,// ,0,
<0,1,31>,// ,0,
<2,8,32>,// ,0,
<8,14,32>,// ,0,
<14,5,32>,// ,0,
<5,1,32>,// ,0,
<1,2,32>,// ,0,
<4,12,33>,// ,0,
<12,19,33>,// ,0,
<19,9,33>,// ,0,
<9,3,33>,// ,0,
<3,4,33>,// ,0,
<13,22,34>,// ,0,
<22,15,34>,// ,0,
<15,6,34>,// ,0,
<6,5,34>,// ,0,
<5,13,34>,// ,0,
<16,25,35>,// ,0,
<25,17,35>,// ,0,
<17,8,35>,// ,0,
<8,7,35>,// ,0,
<7,16,35>,// ,0,
<18,24,36>,// ,0,
<24,16,36>,// ,0,
<16,10,36>,// ,0,
<10,9,36>,// ,0,
<9,18,36>,// ,0,
<15,23,37>,// ,0,
<23,20,37>,// ,0,
<20,12,37>,// ,0,
<12,11,37>,// ,0,
<11,15,37>,// ,0,
<14,17,38>,// ,0,
<17,26,38>,// ,0,
<26,21,38>,// ,0,
<21,13,38>,// ,0,
<13,14,38>,// ,0,
<19,20,39>,// ,0,
<20,28,39>,// ,0,
<28,27,39>,// ,0,
<27,18,39>,// ,0,
<18,19,39>,// ,0,
<29,28,40>,// ,0,
<28,23,40>,// ,0,
<23,22,40>,// ,0,
<22,21,40>,// ,0,
<21,29,40>,// ,0,
<27,29,41>,// ,0,
<29,26,41>,// ,0,
<26,25,41>,// ,0,
<25,24,41>,// ,0,
<24,27,41> //0
 } 
 }
#declare aretes=union{

object{cylinder{<0.0,0.0,1.051462>,<0.618034,0.0,0.8506508>,diam  }}
object{cylinder{<0.0,0.0,1.051462>,<0.2763932,0.5527864,0.8506508>,diam  }}
object{cylinder{<0.0,0.0,1.051462>,<-0.618034,0.0,0.8506508>,diam  }}
object{cylinder{<0.0,0.0,1.051462>,<-0.2763932,-0.5527864,0.8506508>,diam  }}
object{cylinder{<0.618034,0.0,0.8506508>,<0.2763932,0.5527864,0.8506508>,diam  }}
object{cylinder{<0.618034,0.0,0.8506508>,<1.0,0.0,0.3249197>,diam  }}
object{cylinder{<0.618034,0.0,0.8506508>,<0.7236068,-0.5527864,0.5257311>,diam  }}
object{cylinder{<0.2763932,0.5527864,0.8506508>,<-0.1708204,0.8944272,0.5257311>,diam  }}
object{cylinder{<0.2763932,0.5527864,0.8506508>,<0.4472136,0.8944272,0.3249197>,diam  }}
object{cylinder{<-0.618034,0.0,0.8506508>,<-0.2763932,-0.5527864,0.8506508>,diam  }}
object{cylinder{<-0.618034,0.0,0.8506508>,<-1.0,0.0,0.3249197>,diam  }}
object{cylinder{<-0.618034,0.0,0.8506508>,<-0.7236068,0.5527864,0.5257311>,diam  }}
object{cylinder{<-0.2763932,-0.5527864,0.8506508>,<0.1708204,-0.8944272,0.5257311>,diam  }}
object{cylinder{<-0.2763932,-0.5527864,0.8506508>,<-0.4472136,-0.8944272,0.3249197>,diam  }}
object{cylinder{<1.0,0.0,0.3249197>,<0.7236068,-0.5527864,0.5257311>,diam  }}
object{cylinder{<1.0,0.0,0.3249197>,<1.0,0.0,-0.3249197>,diam  }}
object{cylinder{<1.0,0.0,0.3249197>,<0.8944272,0.5527864,0.0>,diam  }}
object{cylinder{<0.7236068,-0.5527864,0.5257311>,<0.1708204,-0.8944272,0.5257311>,diam  }}
object{cylinder{<0.7236068,-0.5527864,0.5257311>,<0.5527864,-0.8944272,0.0>,diam  }}
object{cylinder{<-0.1708204,0.8944272,0.5257311>,<0.4472136,0.8944272,0.3249197>,diam  }}
object{cylinder{<-0.1708204,0.8944272,0.5257311>,<-0.7236068,0.5527864,0.5257311>,diam  }}
object{cylinder{<-0.1708204,0.8944272,0.5257311>,<-0.5527864,0.8944272,0.0>,diam  }}
object{cylinder{<0.4472136,0.8944272,0.3249197>,<0.8944272,0.5527864,0.0>,diam  }}
object{cylinder{<0.4472136,0.8944272,0.3249197>,<0.4472136,0.8944272,-0.3249197>,diam  }}
object{cylinder{<-1.0,0.0,0.3249197>,<-0.7236068,0.5527864,0.5257311>,diam  }}
object{cylinder{<-1.0,0.0,0.3249197>,<-1.0,0.0,-0.3249197>,diam  }}
object{cylinder{<-1.0,0.0,0.3249197>,<-0.8944272,-0.5527864,0.0>,diam  }}
object{cylinder{<-0.7236068,0.5527864,0.5257311>,<-0.5527864,0.8944272,0.0>,diam  }}
object{cylinder{<0.1708204,-0.8944272,0.5257311>,<-0.4472136,-0.8944272,0.3249197>,diam  }}
object{cylinder{<0.1708204,-0.8944272,0.5257311>,<0.5527864,-0.8944272,0.0>,diam  }}
object{cylinder{<-0.4472136,-0.8944272,0.3249197>,<-0.8944272,-0.5527864,0.0>,diam  }}
object{cylinder{<-0.4472136,-0.8944272,0.3249197>,<-0.4472136,-0.8944272,-0.3249197>,diam  }}
object{cylinder{<1.0,0.0,-0.3249197>,<0.8944272,0.5527864,0.0>,diam  }}
object{cylinder{<1.0,0.0,-0.3249197>,<0.618034,0.0,-0.8506508>,diam  }}
object{cylinder{<1.0,0.0,-0.3249197>,<0.7236068,-0.5527864,-0.5257311>,diam  }}
object{cylinder{<0.8944272,0.5527864,0.0>,<0.4472136,0.8944272,-0.3249197>,diam  }}
object{cylinder{<0.5527864,-0.8944272,0.0>,<0.7236068,-0.5527864,-0.5257311>,diam  }}
object{cylinder{<0.5527864,-0.8944272,0.0>,<0.1708204,-0.8944272,-0.5257311>,diam  }}
object{cylinder{<-0.5527864,0.8944272,0.0>,<-0.7236068,0.5527864,-0.5257311>,diam  }}
object{cylinder{<-0.5527864,0.8944272,0.0>,<-0.1708204,0.8944272,-0.5257311>,diam  }}
object{cylinder{<0.4472136,0.8944272,-0.3249197>,<-0.1708204,0.8944272,-0.5257311>,diam  }}
object{cylinder{<0.4472136,0.8944272,-0.3249197>,<0.2763932,0.5527864,-0.8506508>,diam  }}
object{cylinder{<-1.0,0.0,-0.3249197>,<-0.8944272,-0.5527864,0.0>,diam  }}
object{cylinder{<-1.0,0.0,-0.3249197>,<-0.7236068,0.5527864,-0.5257311>,diam  }}
object{cylinder{<-1.0,0.0,-0.3249197>,<-0.618034,0.0,-0.8506508>,diam  }}
object{cylinder{<-0.8944272,-0.5527864,0.0>,<-0.4472136,-0.8944272,-0.3249197>,diam  }}
object{cylinder{<-0.4472136,-0.8944272,-0.3249197>,<0.1708204,-0.8944272,-0.5257311>,diam  }}
object{cylinder{<-0.4472136,-0.8944272,-0.3249197>,<-0.2763932,-0.5527864,-0.8506508>,diam  }}
object{cylinder{<0.618034,0.0,-0.8506508>,<0.7236068,-0.5527864,-0.5257311>,diam  }}
object{cylinder{<0.618034,0.0,-0.8506508>,<0.2763932,0.5527864,-0.8506508>,diam  }}
object{cylinder{<0.618034,0.0,-0.8506508>,<0.0,0.0,-1.051462>,diam  }}
object{cylinder{<0.7236068,-0.5527864,-0.5257311>,<0.1708204,-0.8944272,-0.5257311>,diam  }}
object{cylinder{<0.1708204,-0.8944272,-0.5257311>,<-0.2763932,-0.5527864,-0.8506508>,diam  }}
object{cylinder{<-0.7236068,0.5527864,-0.5257311>,<-0.1708204,0.8944272,-0.5257311>,diam  }}
object{cylinder{<-0.7236068,0.5527864,-0.5257311>,<-0.618034,0.0,-0.8506508>,diam  }}
object{cylinder{<-0.1708204,0.8944272,-0.5257311>,<0.2763932,0.5527864,-0.8506508>,diam  }}
object{cylinder{<0.2763932,0.5527864,-0.8506508>,<0.0,0.0,-1.051462>,diam  }}
object{cylinder{<-0.618034,0.0,-0.8506508>,<-0.2763932,-0.5527864,-0.8506508>,diam  }}
object{cylinder{<-0.618034,0.0,-0.8506508>,<0.0,0.0,-1.051462>,diam  }}
object{cylinder{<-0.2763932,-0.5527864,-0.8506508>,<0.0,0.0,-1.051462>,diam  }}
}
#declare sommets=union{

object{sphere{<0.0,0.0,1.051462>,diam1 }}
object{sphere{<0.618034,0.0,0.8506508>,diam1 }}
object{sphere{<0.2763932,0.5527864,0.8506508>,diam1 }}
object{sphere{<-0.618034,0.0,0.8506508>,diam1 }}
object{sphere{<-0.2763932,-0.5527864,0.8506508>,diam1 }}
object{sphere{<1.0,0.0,0.3249197>,diam1 }}
object{sphere{<0.7236068,-0.5527864,0.5257311>,diam1 }}
object{sphere{<-0.1708204,0.8944272,0.5257311>,diam1 }}
object{sphere{<0.4472136,0.8944272,0.3249197>,diam1 }}
object{sphere{<-1.0,0.0,0.3249197>,diam1 }}
object{sphere{<-0.7236068,0.5527864,0.5257311>,diam1 }}
object{sphere{<0.1708204,-0.8944272,0.5257311>,diam1 }}
object{sphere{<-0.4472136,-0.8944272,0.3249197>,diam1 }}
object{sphere{<1.0,0.0,-0.3249197>,diam1 }}
object{sphere{<0.8944272,0.5527864,0.0>,diam1 }}
object{sphere{<0.5527864,-0.8944272,0.0>,diam1 }}
object{sphere{<-0.5527864,0.8944272,0.0>,diam1 }}
object{sphere{<0.4472136,0.8944272,-0.3249197>,diam1 }}
object{sphere{<-1.0,0.0,-0.3249197>,diam1 }}
object{sphere{<-0.8944272,-0.5527864,0.0>,diam1 }}
object{sphere{<-0.4472136,-0.8944272,-0.3249197>,diam1 }}
object{sphere{<0.618034,0.0,-0.8506508>,diam1 }}
object{sphere{<0.7236068,-0.5527864,-0.5257311>,diam1 }}
object{sphere{<0.1708204,-0.8944272,-0.5257311>,diam1 }}
object{sphere{<-0.7236068,0.5527864,-0.5257311>,diam1 }}
object{sphere{<-0.1708204,0.8944272,-0.5257311>,diam1 }}
object{sphere{<0.2763932,0.5527864,-0.8506508>,diam1 }}
object{sphere{<-0.618034,0.0,-0.8506508>,diam1 }}
object{sphere{<-0.2763932,-0.5527864,-0.8506508>,diam1 }}
object{sphere{<0.0,0.0,-1.051462>,diam1 }}
}
#declare maxIndices=60;
#declare trans=array[60];
#declare trans[0]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-162.00001840940712,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-162.00001840940712,0>);
#declare transy=<-0.309017,-0.0,-0.9510563999999999>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.999998978906837 rotate -90.0*z rotate -162.00001840940712*y Axis_Rotate_Trans(Victor,provi)  translate <0.309017,0.0,0.9510563999999999>};
#declare trans[1]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-148.28253503372147>);
#declare Victor=vrotate(Victor,<0,-144.0000290693005,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-148.28253503372147>);
#declare Hugo=vrotate(Hugo,<0,-144.0000290693005,0>);
#declare transy=<-0.1381966,-0.2763932,-0.9510563999999999>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999989550787516 rotate -148.28253503372147*z rotate -144.0000290693005*y Axis_Rotate_Trans(Victor,provi)  translate <0.1381966,0.2763932,0.9510563999999999>};
#declare trans[2]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-17.99998159059288,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-17.99998159059288,0>);
#declare transy=<0.309017,-0.0,-0.9510563999999999>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.999998978906837 rotate -90.0*z rotate -17.99998159059288*y Axis_Rotate_Trans(Victor,provi)  translate <-0.309017,0.0,0.9510563999999999>};
#declare trans[3]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-31.71746496627854>);
#declare Victor=vrotate(Victor,<0,-35.99997093069951,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-31.71746496627854>);
#declare Hugo=vrotate(Hugo,<0,-35.99997093069951,0>);
#declare transy=<0.1381966,0.2763932,-0.9510563999999999>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999989550787516 rotate -31.71746496627854*z rotate -35.99997093069951*y Axis_Rotate_Trans(Victor,provi)  translate <-0.1381966,-0.2763932,0.9510563999999999>};
#declare trans[4]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-148.2825243674224>);
#declare Victor=vrotate(Victor,<0,-0.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-148.2825243674224>);
#declare Hugo=vrotate(Hugo,<0,-0.0,0>);
#declare transy=<-0.4472136,-0.2763932,-0.8506508>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990701330862 rotate -148.2825243674224*z rotate -0.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.4472136,0.2763932,0.8506508>};
#declare trans[5]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-125.99999982559454,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-125.99999982559454,0>);
#declare transy=<-0.809017,-0.0,-0.58778525>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990398383938 rotate -90.0*z rotate -125.99999982559454*y Axis_Rotate_Trans(Victor,provi)  translate <0.809017,0.0,0.58778525>};
#declare trans[6]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-31.71747468016905>);
#declare Victor=vrotate(Victor,<0,-107.99999836926355,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-31.71747468016905>);
#declare Hugo=vrotate(Hugo,<0,-107.99999836926355,0>);
#declare transy=<-0.6708204,0.2763932,-0.6881909500000001>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990598597238 rotate -31.71747468016905*z rotate -107.99999836926355*y Axis_Rotate_Trans(Victor,provi)  translate <0.6708204,-0.2763932,0.6881909500000001>};
#declare trans[7]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-121.71747515259449>);
#declare Victor=vrotate(Victor,<0,-36.00000004172748,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-121.71747515259449>);
#declare Hugo=vrotate(Hugo,<0,-36.00000004172748,0>);
#declare transy=<-0.0527864,-0.7236068,-0.6881909500000001>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990836878065 rotate -121.71747515259449*z rotate -36.00000004172748*y Axis_Rotate_Trans(Victor,provi)  translate <0.0527864,0.7236068,0.6881909500000001>};
#declare trans[8]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-121.71747586156523>);
#declare Victor=vrotate(Victor,<0,-108.00000105356243,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-121.71747586156523>);
#declare Hugo=vrotate(Hugo,<0,-108.00000105356243,0>);
#declare transy=<-0.3618034,-0.7236068,-0.58778525>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990636664768 rotate -121.71747586156523*z rotate -108.00000105356243*y Axis_Rotate_Trans(Victor,provi)  translate <0.3618034,0.7236068,0.58778525>};
#declare trans[9]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-31.717475632577592>);
#declare Victor=vrotate(Victor,<0,-180.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-31.717475632577592>);
#declare Hugo=vrotate(Hugo,<0,-180.0,0>);
#declare transy=<0.4472136,0.2763932,-0.8506508>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990701330862 rotate -31.717475632577592*z rotate -180.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.4472136,-0.2763932,0.8506508>};
#declare trans[10]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-54.000000174405464,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-54.000000174405464,0>);
#declare transy=<0.809017,-0.0,-0.58778525>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990398383938 rotate -90.0*z rotate -54.000000174405464*y Axis_Rotate_Trans(Victor,provi)  translate <-0.809017,0.0,0.58778525>};
#declare trans[11]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-148.28252531983097>);
#declare Victor=vrotate(Victor,<0,-72.00000163073646,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-148.28252531983097>);
#declare Hugo=vrotate(Hugo,<0,-72.00000163073646,0>);
#declare transy=<0.6708204,-0.2763932,-0.6881909500000001>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990598597238 rotate -148.28252531983097*z rotate -72.00000163073646*y Axis_Rotate_Trans(Victor,provi)  translate <-0.6708204,0.2763932,0.6881909500000001>};
#declare trans[12]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-58.28252484740554>);
#declare Victor=vrotate(Victor,<0,-143.99999995827253,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-58.28252484740554>);
#declare Hugo=vrotate(Hugo,<0,-143.99999995827253,0>);
#declare transy=<0.0527864,0.7236068,-0.6881909500000001>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990836878065 rotate -58.28252484740554*z rotate -143.99999995827253*y Axis_Rotate_Trans(Victor,provi)  translate <-0.0527864,-0.7236068,0.6881909500000001>};
#declare trans[13]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-58.282524138434766>);
#declare Victor=vrotate(Victor,<0,-71.9999989464376,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-58.282524138434766>);
#declare Hugo=vrotate(Hugo,<0,-71.9999989464376,0>);
#declare transy=<0.3618034,0.7236068,-0.58778525>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990636664768 rotate -58.282524138434766*z rotate -71.9999989464376*y Axis_Rotate_Trans(Victor,provi)  translate <-0.3618034,-0.7236068,0.58778525>};
#declare trans[14]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-31.717473783190155>);
#declare Victor=vrotate(Victor,<0,35.99999806638106,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-31.717473783190155>);
#declare Hugo=vrotate(Hugo,<0,35.99999806638106,0>);
#declare transy=<-0.8618034,0.2763932,-0.42532539999999996>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990501842656 rotate -31.717473783190155*z rotate 35.99999806638106*y Axis_Rotate_Trans(Victor,provi)  translate <0.8618034,-0.2763932,0.42532539999999996>};
#declare trans[15]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-90.0,0>);
#declare transy=<-1.0,-0.0,-0.0>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.999999076695802 rotate -90.0*z rotate -90.0*y Axis_Rotate_Trans(Victor,provi)  translate <1.0,0.0,0.0>};
#declare trans[16]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-148.28252531983097>);
#declare Victor=vrotate(Victor,<0,-72.00000163073646,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-148.28252531983097>);
#declare Hugo=vrotate(Hugo,<0,-72.00000163073646,0>);
#declare transy=<-0.9472136,-0.2763932,-0.16245985>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990598597238 rotate -148.28252531983097*z rotate -72.00000163073646*y Axis_Rotate_Trans(Victor,provi)  translate <0.9472136,0.2763932,0.16245985>};
#declare trans[17]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-58.28252436742242>);
#declare Victor=vrotate(Victor,<0,-0.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-58.28252436742242>);
#declare Hugo=vrotate(Hugo,<0,-0.0,0>);
#declare transy=<-0.4472136,0.7236068,-0.5257311>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990701330862 rotate -58.28252436742242*z rotate -0.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.4472136,-0.7236068,0.5257311>};
#declare trans[18]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-58.282524138434766>);
#declare Victor=vrotate(Victor,<0,-71.9999989464376,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-58.282524138434766>);
#declare Hugo=vrotate(Hugo,<0,-71.9999989464376,0>);
#declare transy=<-0.6381966,0.7236068,-0.26286555>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990636664768 rotate -58.282524138434766*z rotate -71.9999989464376*y Axis_Rotate_Trans(Victor,provi)  translate <0.6381966,-0.7236068,0.26286555>};
#declare trans[19]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-162.00000163863874,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-162.00000163863874,0>);
#declare transy=<-0.1381966,-0.8944272,-0.42532539999999996>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990740123486 rotate -90.0*z rotate -162.00000163863874*y Axis_Rotate_Trans(Victor,provi)  translate <0.1381966,0.8944272,0.42532539999999996>};
#declare trans[20]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-58.28252436742242>);
#declare Victor=vrotate(Victor,<0,-0.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-58.28252436742242>);
#declare Hugo=vrotate(Hugo,<0,-0.0,0>);
#declare transy=<0.4472136,-0.7236068,-0.5257311>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990701330862 rotate -58.28252436742242*z rotate -0.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.4472136,0.7236068,0.5257311>};
#declare trans[21]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-54.000000174405464,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-54.000000174405464,0>);
#declare transy=<0.3618034,-0.8944272,-0.26286555>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990398383938 rotate -90.0*z rotate -54.000000174405464*y Axis_Rotate_Trans(Victor,provi)  translate <-0.3618034,0.8944272,0.26286555>};
#declare trans[22]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-58.28252484740554>);
#declare Victor=vrotate(Victor,<0,-143.99999995827253,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-58.28252484740554>);
#declare Hugo=vrotate(Hugo,<0,-143.99999995827253,0>);
#declare transy=<-0.6708204,-0.7236068,-0.16245985>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990836878065 rotate -58.28252484740554*z rotate -143.99999995827253*y Axis_Rotate_Trans(Victor,provi)  translate <0.6708204,0.7236068,0.16245985>};
#declare trans[23]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-90.0,0>);
#declare transy=<-0.4472136,-0.8944272,-0.0>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.999999076695802 rotate -90.0*z rotate -90.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.4472136,0.8944272,0.0>};
#declare trans[24]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-148.28252621680986>);
#declare Victor=vrotate(Victor,<0,144.00000193361893,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-148.28252621680986>);
#declare Hugo=vrotate(Hugo,<0,144.00000193361893,0>);
#declare transy=<0.8618034,-0.2763932,-0.42532539999999996>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990501842656 rotate -148.28252621680986*z rotate 144.00000193361893*y Axis_Rotate_Trans(Victor,provi)  translate <-0.8618034,0.2763932,0.42532539999999996>};
#declare trans[25]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-90.0,0>);
#declare transy=<1.0,-0.0,-0.0>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.999999076695802 rotate -90.0*z rotate -90.0*y Axis_Rotate_Trans(Victor,provi)  translate <-1.0,0.0,0.0>};
#declare trans[26]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-31.71747468016906>);
#declare Victor=vrotate(Victor,<0,-107.99999836926355,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-31.71747468016906>);
#declare Hugo=vrotate(Hugo,<0,-107.99999836926355,0>);
#declare transy=<0.9472136,0.2763932,-0.16245985>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990598597238 rotate -31.71747468016906*z rotate -107.99999836926355*y Axis_Rotate_Trans(Victor,provi)  translate <-0.9472136,-0.2763932,0.16245985>};
#declare trans[27]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-121.71747586156523>);
#declare Victor=vrotate(Victor,<0,-108.00000105356243,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-121.71747586156523>);
#declare Hugo=vrotate(Hugo,<0,-108.00000105356243,0>);
#declare transy=<0.6381966,-0.7236068,-0.26286555>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990636664768 rotate -121.71747586156523*z rotate -108.00000105356243*y Axis_Rotate_Trans(Victor,provi)  translate <-0.6381966,0.7236068,0.26286555>};
#declare trans[28]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-17.99999836136127,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-17.99999836136127,0>);
#declare transy=<0.1381966,0.8944272,-0.42532539999999996>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990740123486 rotate -90.0*z rotate -17.99999836136127*y Axis_Rotate_Trans(Victor,provi)  translate <-0.1381966,-0.8944272,0.42532539999999996>};
#declare trans[29]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-125.99999982559454,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-125.99999982559454,0>);
#declare transy=<-0.3618034,0.8944272,-0.26286555>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990398383938 rotate -90.0*z rotate -125.99999982559454*y Axis_Rotate_Trans(Victor,provi)  translate <0.3618034,-0.8944272,0.26286555>};
#declare trans[30]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-121.71747515259449>);
#declare Victor=vrotate(Victor,<0,-36.00000004172749,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-121.71747515259449>);
#declare Hugo=vrotate(Hugo,<0,-36.00000004172749,0>);
#declare transy=<0.6708204,0.7236068,-0.16245985>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990836878065 rotate -121.71747515259449*z rotate -36.00000004172749*y Axis_Rotate_Trans(Victor,provi)  translate <-0.6708204,-0.7236068,0.16245985>};
#declare trans[31]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-90.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-90.0,0>);
#declare transy=<0.4472136,0.8944272,-0.0>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.999999076695802 rotate -90.0*z rotate -90.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.4472136,-0.8944272,0.0>};
#declare trans[32]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-148.28252531983097>);
#declare Victor=vrotate(Victor,<0,72.00000163073646,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-148.28252531983097>);
#declare Hugo=vrotate(Hugo,<0,72.00000163073646,0>);
#declare transy=<-0.9472136,-0.2763932,0.16245985>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990598597238 rotate -148.28252531983097*z rotate 72.00000163073646*y Axis_Rotate_Trans(Victor,provi)  translate <0.9472136,0.2763932,-0.16245985>};
#declare trans[33]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-54.000000174405464,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-54.000000174405464,0>);
#declare transy=<-0.809017,-0.0,0.58778525>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990398383938 rotate -90.0*z rotate -54.000000174405464*y Axis_Rotate_Trans(Victor,provi)  translate <0.809017,0.0,-0.58778525>};
#declare trans[34]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-31.717473783190155>);
#declare Victor=vrotate(Victor,<0,-35.99999806638106,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-31.717473783190155>);
#declare Hugo=vrotate(Hugo,<0,-35.99999806638106,0>);
#declare transy=<-0.8618034,0.2763932,0.42532539999999996>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990501842656 rotate -31.717473783190155*z rotate -35.99999806638106*y Axis_Rotate_Trans(Victor,provi)  translate <0.8618034,-0.2763932,-0.42532539999999996>};
#declare trans[35]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-121.71747515259449>);
#declare Victor=vrotate(Victor,<0,-36.00000004172749,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-121.71747515259449>);
#declare Hugo=vrotate(Hugo,<0,-36.00000004172749,0>);
#declare transy=<-0.6708204,-0.7236068,0.16245985>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990836878065 rotate -121.71747515259449*z rotate -36.00000004172749*y Axis_Rotate_Trans(Victor,provi)  translate <0.6708204,0.7236068,-0.16245985>};
#declare trans[36]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-121.71747586156523>);
#declare Victor=vrotate(Victor,<0,-108.00000105356243,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-121.71747586156523>);
#declare Hugo=vrotate(Hugo,<0,-108.00000105356243,0>);
#declare transy=<-0.6381966,0.7236068,0.26286555>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990636664768 rotate -121.71747586156523*z rotate -108.00000105356243*y Axis_Rotate_Trans(Victor,provi)  translate <0.6381966,-0.7236068,-0.26286555>};
#declare trans[37]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-54.000000174405464,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-54.000000174405464,0>);
#declare transy=<-0.3618034,0.8944272,0.26286555>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990398383938 rotate -90.0*z rotate -54.000000174405464*y Axis_Rotate_Trans(Victor,provi)  translate <0.3618034,-0.8944272,-0.26286555>};
#declare trans[38]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-58.282524138434766>);
#declare Victor=vrotate(Victor,<0,-71.9999989464376,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-58.282524138434766>);
#declare Hugo=vrotate(Hugo,<0,-71.9999989464376,0>);
#declare transy=<0.6381966,-0.7236068,0.26286555>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990636664768 rotate -58.282524138434766*z rotate -71.9999989464376*y Axis_Rotate_Trans(Victor,provi)  translate <-0.6381966,0.7236068,-0.26286555>};
#declare trans[39]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-125.99999982559454,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-125.99999982559454,0>);
#declare transy=<0.3618034,-0.8944272,0.26286555>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990398383938 rotate -90.0*z rotate -125.99999982559454*y Axis_Rotate_Trans(Victor,provi)  translate <-0.3618034,0.8944272,-0.26286555>};
#declare trans[40]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-17.999998361361264,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-17.999998361361264,0>);
#declare transy=<-0.1381966,-0.8944272,0.42532539999999996>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990740123486 rotate -90.0*z rotate -17.999998361361264*y Axis_Rotate_Trans(Victor,provi)  translate <0.1381966,0.8944272,-0.42532539999999996>};
#declare trans[41]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-58.28252413843479>);
#declare Victor=vrotate(Victor,<0,-71.9999989464376,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-58.28252413843479>);
#declare Hugo=vrotate(Hugo,<0,-71.9999989464376,0>);
#declare transy=<-0.3618034,-0.7236068,0.58778525>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990636664768 rotate -58.28252413843479*z rotate -71.9999989464376*y Axis_Rotate_Trans(Victor,provi)  translate <0.3618034,0.7236068,-0.58778525>};
#declare trans[42]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-31.71747468016906>);
#declare Victor=vrotate(Victor,<0,107.99999836926355,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-31.71747468016906>);
#declare Hugo=vrotate(Hugo,<0,107.99999836926355,0>);
#declare transy=<0.9472136,0.2763932,0.16245985>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990598597238 rotate -31.71747468016906*z rotate 107.99999836926355*y Axis_Rotate_Trans(Victor,provi)  translate <-0.9472136,-0.2763932,-0.16245985>};
#declare trans[43]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-148.28252621680986>);
#declare Victor=vrotate(Victor,<0,-144.00000193361893,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-148.28252621680986>);
#declare Hugo=vrotate(Hugo,<0,-144.00000193361893,0>);
#declare transy=<0.8618034,-0.2763932,0.42532539999999996>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990501842656 rotate -148.28252621680986*z rotate -144.00000193361893*y Axis_Rotate_Trans(Victor,provi)  translate <-0.8618034,0.2763932,-0.42532539999999996>};
#declare trans[44]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-125.99999982559454,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-125.99999982559454,0>);
#declare transy=<0.809017,-0.0,0.58778525>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990398383938 rotate -90.0*z rotate -125.99999982559454*y Axis_Rotate_Trans(Victor,provi)  translate <-0.809017,0.0,-0.58778525>};
#declare trans[45]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-58.28252484740554>);
#declare Victor=vrotate(Victor,<0,-143.99999995827253,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-58.28252484740554>);
#declare Hugo=vrotate(Hugo,<0,-143.99999995827253,0>);
#declare transy=<0.6708204,0.7236068,0.16245985>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990836878065 rotate -58.28252484740554*z rotate -143.99999995827253*y Axis_Rotate_Trans(Victor,provi)  translate <-0.6708204,-0.7236068,-0.16245985>};
#declare trans[46]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-162.00000163863874,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-162.00000163863874,0>);
#declare transy=<0.1381966,0.8944272,0.42532539999999996>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990740123486 rotate -90.0*z rotate -162.00000163863874*y Axis_Rotate_Trans(Victor,provi)  translate <-0.1381966,-0.8944272,-0.42532539999999996>};
#declare trans[47]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-121.71747586156522>);
#declare Victor=vrotate(Victor,<0,-108.00000105356243,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-121.71747586156522>);
#declare Hugo=vrotate(Hugo,<0,-108.00000105356243,0>);
#declare transy=<0.3618034,0.7236068,0.58778525>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990636664768 rotate -121.71747586156522*z rotate -108.00000105356243*y Axis_Rotate_Trans(Victor,provi)  translate <-0.3618034,-0.7236068,-0.58778525>};
#declare trans[48]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-31.71747468016905>);
#declare Victor=vrotate(Victor,<0,107.99999836926355,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-31.71747468016905>);
#declare Hugo=vrotate(Hugo,<0,107.99999836926355,0>);
#declare transy=<-0.6708204,0.2763932,0.6881909500000001>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990598597238 rotate -31.71747468016905*z rotate 107.99999836926355*y Axis_Rotate_Trans(Victor,provi)  translate <0.6708204,-0.2763932,-0.6881909500000001>};
#declare trans[49]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-148.2825243674224>);
#declare Victor=vrotate(Victor,<0,-0.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-148.2825243674224>);
#declare Hugo=vrotate(Hugo,<0,-0.0,0>);
#declare transy=<-0.4472136,-0.2763932,0.8506508>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990701330862 rotate -148.2825243674224*z rotate -0.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.4472136,0.2763932,-0.8506508>};
#declare trans[50]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-17.999981590592867,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-17.999981590592867,0>);
#declare transy=<-0.309017,-0.0,0.9510563999999999>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.999998978906837 rotate -90.0*z rotate -17.999981590592867*y Axis_Rotate_Trans(Victor,provi)  translate <0.309017,0.0,-0.9510563999999999>};
#declare trans[51]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-58.28252436742242>);
#declare Victor=vrotate(Victor,<0,-0.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-58.28252436742242>);
#declare Hugo=vrotate(Hugo,<0,-0.0,0>);
#declare transy=<-0.4472136,0.7236068,0.5257311>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990701330862 rotate -58.28252436742242*z rotate -0.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.4472136,-0.7236068,-0.5257311>};
#declare trans[52]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-121.71747515259449>);
#declare Victor=vrotate(Victor,<0,-36.0000000417275,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-121.71747515259449>);
#declare Hugo=vrotate(Hugo,<0,-36.0000000417275,0>);
#declare transy=<0.0527864,0.7236068,0.6881909500000001>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990836878065 rotate -121.71747515259449*z rotate -36.0000000417275*y Axis_Rotate_Trans(Victor,provi)  translate <-0.0527864,-0.7236068,-0.6881909500000001>};
#declare trans[53]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-121.7174756325776>);
#declare Victor=vrotate(Victor,<0,-180.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-121.7174756325776>);
#declare Hugo=vrotate(Hugo,<0,-180.0,0>);
#declare transy=<0.4472136,-0.7236068,0.5257311>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990701330862 rotate -121.7174756325776*z rotate -180.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.4472136,0.7236068,-0.5257311>};
#declare trans[54]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-31.71747468016907>);
#declare Victor=vrotate(Victor,<0,-107.99999836926355,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-31.71747468016907>);
#declare Hugo=vrotate(Hugo,<0,-107.99999836926355,0>);
#declare transy=<0.6708204,-0.2763932,0.6881909500000001>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990598597238 rotate -31.71747468016907*z rotate -107.99999836926355*y Axis_Rotate_Trans(Victor,provi)  translate <-0.6708204,0.2763932,-0.6881909500000001>};
#declare trans[55]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-58.28252484740554>);
#declare Victor=vrotate(Victor,<0,-143.9999999582725,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-58.28252484740554>);
#declare Hugo=vrotate(Hugo,<0,-143.9999999582725,0>);
#declare transy=<-0.0527864,-0.7236068,0.6881909500000001>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990836878065 rotate -58.28252484740554*z rotate -143.9999999582725*y Axis_Rotate_Trans(Victor,provi)  translate <0.0527864,0.7236068,-0.6881909500000001>};
#declare trans[56]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-31.71746496627853>);
#declare Victor=vrotate(Victor,<0,-35.999970930699476,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-31.71746496627853>);
#declare Hugo=vrotate(Hugo,<0,-35.999970930699476,0>);
#declare transy=<-0.1381966,-0.2763932,0.9510563999999999>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999989550787516 rotate -31.71746496627853*z rotate -35.999970930699476*y Axis_Rotate_Trans(Victor,provi)  translate <0.1381966,0.2763932,-0.9510563999999999>};
#declare trans[57]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-31.717475632577592>);
#declare Victor=vrotate(Victor,<0,-180.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-31.717475632577592>);
#declare Hugo=vrotate(Hugo,<0,-180.0,0>);
#declare transy=<0.4472136,0.2763932,0.8506508>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999990701330862 rotate -31.717475632577592*z rotate -180.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.4472136,-0.2763932,-0.8506508>};
#declare trans[58]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-162.00001840940715,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-162.00001840940715,0>);
#declare transy=<0.309017,-0.0,0.9510563999999999>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.999998978906837 rotate -90.0*z rotate -162.00001840940715*y Axis_Rotate_Trans(Victor,provi)  translate <-0.309017,0.0,-0.9510563999999999>};
#declare trans[59]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-148.28253503372147>);
#declare Victor=vrotate(Victor,<0,-144.00002906930055,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-148.28253503372147>);
#declare Hugo=vrotate(Hugo,<0,-144.00002906930055,0>);
#declare transy=<0.1381966,0.2763932,0.9510563999999999>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 0.9999989550787516 rotate -148.28253503372147*z rotate -144.00002906930055*y Axis_Rotate_Trans(Victor,provi)  translate <-0.1381966,-0.2763932,-0.9510563999999999>};
#declare maxFaces=32;
#declare transface=array[32];
#declare transface[0]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-10.812307026715995>);
#declare Victor=vrotate(Victor,<0,108.000022167637,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-10.812307026715995>);
#declare Hugo=vrotate(Hugo,<0,108.000022167637,0>);
#declare transy=<-0.2927051,-0.2763932,-0.9008536>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -10.812307026715995*z rotate 108.000022167637*y Axis_Rotate_Trans(Victor,provi)  translate <0.2927051,0.2763932,0.9008536>};
#declare transface[1]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-169.18769297328402>);
#declare Victor=vrotate(Victor,<0,71.999977832363,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-169.18769297328402>);
#declare Hugo=vrotate(Hugo,<0,71.999977832363,0>);
#declare transy=<0.2927051,0.2763932,-0.9008536>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -169.18769297328402*z rotate 71.999977832363*y Axis_Rotate_Trans(Victor,provi)  translate <-0.2927051,-0.2763932,0.9008536>};
#declare transface[2]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-60.58554846763982>);
#declare Victor=vrotate(Victor,<0,47.818585222305295,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-60.58554846763982>);
#declare Hugo=vrotate(Hugo,<0,47.818585222305295,0>);
#declare transy=<-0.8354102,0.1381966,-0.506555325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -60.58554846763982*z rotate 47.818585222305295*y Axis_Rotate_Trans(Victor,provi)  translate <0.8354102,-0.1381966,0.506555325>};
#declare transface[3]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-72.33019251501625>);
#declare Victor=vrotate(Victor,<0,173.3546271466773,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-72.33019251501625>);
#declare Hugo=vrotate(Hugo,<0,173.3546271466773,0>);
#declare transy=<-0.09549149999999999,-0.809017,-0.556758175>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -72.33019251501625*z rotate 173.3546271466773*y Axis_Rotate_Trans(Victor,provi)  translate <0.09549149999999999,0.809017,0.556758175>};
#declare transface[4]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-119.41445153236019>);
#declare Victor=vrotate(Victor,<0,132.18141477769473,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-119.41445153236019>);
#declare Hugo=vrotate(Hugo,<0,132.18141477769473,0>);
#declare transy=<0.8354102,-0.1381966,-0.506555325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -119.41445153236019*z rotate 132.18141477769473*y Axis_Rotate_Trans(Victor,provi)  translate <-0.8354102,0.1381966,0.506555325>};
#declare transface[5]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-107.66980748498376>);
#declare Victor=vrotate(Victor,<0,6.645372853322693,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-107.66980748498376>);
#declare Hugo=vrotate(Hugo,<0,6.645372853322693,0>);
#declare transy=<0.09549149999999999,0.809017,-0.556758175>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -107.66980748498376*z rotate 6.645372853322693*y Axis_Rotate_Trans(Victor,provi)  translate <-0.09549149999999999,-0.809017,0.556758175>};
#declare transface[6]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-10.81231614949397>);
#declare Victor=vrotate(Victor,<0,-180.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-10.81231614949397>);
#declare Hugo=vrotate(Hugo,<0,-180.0,0>);
#declare transy=<-0.9472136,-0.2763932,-0.0>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -10.81231614949397*z rotate -180.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.9472136,0.2763932,0.0>};
#declare transface[7]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-107.66980818378138>);
#declare Victor=vrotate(Victor,<0,78.64537259566421,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-107.66980818378138>);
#declare Hugo=vrotate(Hugo,<0,78.64537259566421,0>);
#declare transy=<-0.5,0.809017,-0.26286555>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -107.66980818378138*z rotate 78.64537259566421*y Axis_Rotate_Trans(Victor,provi)  translate <0.5,-0.809017,0.26286555>};
#declare transface[8]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-127.37736939672821>);
#declare Victor=vrotate(Victor,<0,-144.00000071278768,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-127.37736939672821>);
#declare Hugo=vrotate(Hugo,<0,-144.00000071278768,0>);
#declare transy=<0.5427051,-0.7236068,-0.394298325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -127.37736939672821*z rotate -144.00000071278768*y Axis_Rotate_Trans(Victor,provi)  translate <-0.5427051,0.7236068,0.394298325>};
#declare transface[9]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-72.33019242585792>);
#declare Victor=vrotate(Victor,<0,114.6453718745162,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-72.33019242585792>);
#declare Hugo=vrotate(Hugo,<0,114.6453718745162,0>);
#declare transy=<-0.559017,-0.809017,0.081229925>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -72.33019242585792*z rotate 114.6453718745162*y Axis_Rotate_Trans(Victor,provi)  translate <0.559017,0.809017,-0.081229925>};
#declare transface[10]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-169.18768385050603>);
#declare Victor=vrotate(Victor,<0,-0.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-169.18768385050603>);
#declare Hugo=vrotate(Hugo,<0,-0.0,0>);
#declare transy=<0.9472136,0.2763932,-0.0>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -169.18768385050603*z rotate -0.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.9472136,-0.2763932,0.0>};
#declare transface[11]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-107.6698075741421>);
#declare Victor=vrotate(Victor,<0,65.35462812548381,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-107.6698075741421>);
#declare Hugo=vrotate(Hugo,<0,65.35462812548381,0>);
#declare transy=<0.559017,0.809017,0.081229925>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -107.6698075741421*z rotate 65.35462812548381*y Axis_Rotate_Trans(Victor,provi)  translate <-0.559017,-0.809017,-0.081229925>};
#declare transface[12]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-60.58554878019182>);
#declare Victor=vrotate(Victor,<0,119.81858495262114,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-60.58554878019182>);
#declare Hugo=vrotate(Hugo,<0,119.81858495262114,0>);
#declare transy=<-0.7399187,0.1381966,0.6379881000000001>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -60.58554878019182*z rotate 119.81858495262114*y Axis_Rotate_Trans(Victor,provi)  translate <0.7399187,-0.1381966,-0.6379881000000001>};
#declare transface[13]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-52.6226306032718>);
#declare Victor=vrotate(Victor,<0,35.999999287212326,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-52.6226306032718>);
#declare Hugo=vrotate(Hugo,<0,35.999999287212326,0>);
#declare transy=<-0.5427051,0.7236068,0.394298325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -52.6226306032718*z rotate 35.999999287212326*y Axis_Rotate_Trans(Victor,provi)  translate <0.5427051,-0.7236068,-0.394298325>};
#declare transface[14]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-127.37736939672821>);
#declare Victor=vrotate(Victor,<0,144.00000071278768,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-127.37736939672821>);
#declare Hugo=vrotate(Hugo,<0,144.00000071278768,0>);
#declare transy=<0.5427051,-0.7236068,0.394298325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -127.37736939672821*z rotate 144.00000071278768*y Axis_Rotate_Trans(Victor,provi)  translate <-0.5427051,0.7236068,-0.394298325>};
#declare transface[15]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-72.33019251501625>);
#declare Victor=vrotate(Victor,<0,-173.3546271466773,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-72.33019251501625>);
#declare Hugo=vrotate(Hugo,<0,-173.3546271466773,0>);
#declare transy=<-0.09549149999999999,-0.809017,0.556758175>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -72.33019251501625*z rotate -173.3546271466773*y Axis_Rotate_Trans(Victor,provi)  translate <0.09549149999999999,0.809017,-0.556758175>};
#declare transface[16]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-119.41445121980821>);
#declare Victor=vrotate(Victor,<0,60.18141504737886,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-119.41445121980821>);
#declare Hugo=vrotate(Hugo,<0,60.18141504737886,0>);
#declare transy=<0.7399187,-0.1381966,0.6379881000000001>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -119.41445121980821*z rotate 60.18141504737886*y Axis_Rotate_Trans(Victor,provi)  translate <-0.7399187,0.1381966,-0.6379881000000001>};
#declare transface[17]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-107.66980748498376>);
#declare Victor=vrotate(Victor,<0,-6.645372853322693,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-107.66980748498376>);
#declare Hugo=vrotate(Hugo,<0,-6.645372853322693,0>);
#declare transy=<0.09549149999999999,0.809017,0.556758175>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -107.66980748498376*z rotate -6.645372853322693*y Axis_Rotate_Trans(Victor,provi)  translate <-0.09549149999999999,-0.809017,-0.556758175>};
#declare transface[18]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-10.812307026715995>);
#declare Victor=vrotate(Victor,<0,-108.000022167637,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-10.812307026715995>);
#declare Hugo=vrotate(Hugo,<0,-108.000022167637,0>);
#declare transy=<-0.2927051,-0.2763932,0.9008536>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -10.812307026715995*z rotate -108.000022167637*y Axis_Rotate_Trans(Victor,provi)  translate <0.2927051,0.2763932,-0.9008536>};
#declare transface[19]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-169.18769297328402>);
#declare Victor=vrotate(Victor,<0,-71.999977832363,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-169.18769297328402>);
#declare Hugo=vrotate(Hugo,<0,-71.999977832363,0>);
#declare transy=<0.2927051,0.2763932,0.9008536>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -169.18769297328402*z rotate -71.999977832363*y Axis_Rotate_Trans(Victor,provi)  translate <-0.2927051,-0.2763932,-0.9008536>};
#declare transface[20]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-136.35307268981052>);
#declare Victor=vrotate(Victor,<0,-166.38617753912283,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-136.35307268981052>);
#declare Hugo=vrotate(Hugo,<0,-166.38617753912283,0>);
#declare transy=<0.2826238,-0.3618034,-0.769420875>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -136.35307268981052*z rotate -166.38617753912283*y Axis_Rotate_Trans(Victor,provi)  translate <-0.2826238,0.3618034,0.769420875>};
#declare transface[21]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-43.6469273101895>);
#declare Victor=vrotate(Victor,<0,-13.613822460877198,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-43.6469273101895>);
#declare Hugo=vrotate(Hugo,<0,-13.613822460877198,0>);
#declare transy=<-0.2826238,0.3618034,-0.769420875>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -43.6469273101895*z rotate -13.613822460877198*y Axis_Rotate_Trans(Victor,provi)  translate <0.2826238,-0.3618034,0.769420875>};
#declare transface[22]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-73.9549429471008>);
#declare Victor=vrotate(Victor,<0,-134.26769926641637,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-73.9549429471008>);
#declare Hugo=vrotate(Hugo,<0,-134.26769926641637,0>);
#declare transy=<-0.6118034,-0.4145898,-0.506555325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -73.9549429471008*z rotate -134.26769926641637*y Axis_Rotate_Trans(Victor,provi)  translate <0.6118034,0.4145898,0.506555325>};
#declare transface[23]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-106.0450570528992>);
#declare Victor=vrotate(Victor,<0,-45.732300733583635,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-106.0450570528992>);
#declare Hugo=vrotate(Hugo,<0,-45.732300733583635,0>);
#declare transy=<0.6118034,0.4145898,-0.506555325>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -106.0450570528992*z rotate -45.732300733583635*y Axis_Rotate_Trans(Victor,provi)  translate <-0.6118034,-0.4145898,0.506555325>};
#declare transface[24]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-43.64692696332558>);
#declare Victor=vrotate(Victor,<0,58.38617737991168,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-43.64692696332558>);
#declare Hugo=vrotate(Hugo,<0,58.38617737991168,0>);
#declare transy=<-0.8190983000000001,0.3618034,0.031027074999999987>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -43.64692696332558*z rotate 58.38617737991168*y Axis_Rotate_Trans(Victor,provi)  translate <0.8190983000000001,-0.3618034,-0.031027074999999987>};
#declare transface[25]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-180.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-180.0,0>);
#declare transy=<0.05278640000000001,-0.8944272,-0.0>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -90.0*z rotate -180.0*y Axis_Rotate_Trans(Victor,provi)  translate <-0.05278640000000001,0.8944272,0.0>};
#declare transface[26]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-136.3530730366744>);
#declare Victor=vrotate(Victor,<0,121.61382262008833,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-136.3530730366744>);
#declare Hugo=vrotate(Hugo,<0,121.61382262008833,0>);
#declare transy=<0.8190983000000001,-0.3618034,0.031027074999999987>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -136.3530730366744*z rotate 121.61382262008833*y Axis_Rotate_Trans(Victor,provi)  translate <-0.8190983000000001,0.3618034,-0.031027074999999987>};
#declare transface[27]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-90.0>);
#declare Victor=vrotate(Victor,<0,-0.0,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-90.0>);
#declare Hugo=vrotate(Hugo,<0,-0.0,0>);
#declare transy=<-0.05278640000000001,0.8944272,-0.0>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -90.0*z rotate -0.0*y Axis_Rotate_Trans(Victor,provi)  translate <0.05278640000000001,-0.8944272,0.0>};
#declare transface[28]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-73.95494290464947>);
#declare Victor=vrotate(Victor,<0,-62.267698083121886,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-73.95494290464947>);
#declare Hugo=vrotate(Hugo,<0,-62.267698083121886,0>);
#declare transy=<-0.6708204,-0.4145898,0.4253254>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -73.95494290464947*z rotate -62.267698083121886*y Axis_Rotate_Trans(Victor,provi)  translate <0.6708204,0.4145898,-0.4253254>};
#declare transface[29]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-106.04505709535054>);
#declare Victor=vrotate(Victor,<0,-117.7323019168781,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-106.04505709535054>);
#declare Hugo=vrotate(Hugo,<0,-117.7323019168781,0>);
#declare transy=<0.6708204,0.4145898,0.4253254>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -106.04505709535054*z rotate -117.7323019168781*y Axis_Rotate_Trans(Victor,provi)  translate <-0.6708204,-0.4145898,-0.4253254>};
#declare transface[30]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-43.64692044207133>);
#declare Victor=vrotate(Victor,<0,130.3861892528495,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-43.64692044207133>);
#declare Hugo=vrotate(Hugo,<0,130.3861892528495,0>);
#declare transy=<-0.2236068,0.3618034,0.78859655>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -43.64692044207133*z rotate 130.3861892528495*y Axis_Rotate_Trans(Victor,provi)  translate <0.2236068,-0.3618034,-0.78859655>};
#declare transface[31]=
#declare Victor=<0,1,0>; 
#declare Victor=vrotate(Victor,<0,0,-136.35307268981052>);
#declare Victor=vrotate(Victor,<0,166.38617753912283,0>);
#declare Hugo=<0,0,1>;
#declare Hugo=vrotate(Hugo,<0,0,-136.35307268981052>);
#declare Hugo=vrotate(Hugo,<0,166.38617753912283,0>);
#declare transy=<0.2826238,-0.3618034,0.769420875>;
#declare provi=vdot(Hugo,transy)/sqrt(vdot(transy,transy));#declare provi=acos(provi)*180/pi;#if(transy.y>0) #declare provi=-provi; #end transform{translate 0.0*y scale 1.0 rotate -136.35307268981052*z rotate 166.38617753912283*y Axis_Rotate_Trans(Victor,provi)  translate <-0.2826238,0.3618034,-0.769420875>};
#declare nbVertices=42;
#declare lesVertices=array[nbVertices];
#declare lesVertices[0]=<0.0,0.0,1.051462>;
#declare lesVertices[1]=<0.618034,0.0,0.8506508>;
#declare lesVertices[2]=<0.2763932,0.5527864,0.8506508>;
#declare lesVertices[3]=<-0.618034,0.0,0.8506508>;
#declare lesVertices[4]=<-0.2763932,-0.5527864,0.8506508>;
#declare lesVertices[5]=<1.0,0.0,0.3249197>;
#declare lesVertices[6]=<0.7236068,-0.5527864,0.5257311>;
#declare lesVertices[7]=<-0.1708204,0.8944272,0.5257311>;
#declare lesVertices[8]=<0.4472136,0.8944272,0.3249197>;
#declare lesVertices[9]=<-1.0,0.0,0.3249197>;
#declare lesVertices[10]=<-0.7236068,0.5527864,0.5257311>;
#declare lesVertices[11]=<0.1708204,-0.8944272,0.5257311>;
#declare lesVertices[12]=<-0.4472136,-0.8944272,0.3249197>;
#declare lesVertices[13]=<1.0,0.0,-0.3249197>;
#declare lesVertices[14]=<0.8944272,0.5527864,0.0>;
#declare lesVertices[15]=<0.5527864,-0.8944272,0.0>;
#declare lesVertices[16]=<-0.5527864,0.8944272,0.0>;
#declare lesVertices[17]=<0.4472136,0.8944272,-0.3249197>;
#declare lesVertices[18]=<-1.0,0.0,-0.3249197>;
#declare lesVertices[19]=<-0.8944272,-0.5527864,0.0>;
#declare lesVertices[20]=<-0.4472136,-0.8944272,-0.3249197>;
#declare lesVertices[21]=<0.618034,0.0,-0.8506508>;
#declare lesVertices[22]=<0.7236068,-0.5527864,-0.5257311>;
#declare lesVertices[23]=<0.1708204,-0.8944272,-0.5257311>;
#declare lesVertices[24]=<-0.7236068,0.5527864,-0.5257311>;
#declare lesVertices[25]=<-0.1708204,0.8944272,-0.5257311>;
#declare lesVertices[26]=<0.2763932,0.5527864,-0.8506508>;
#declare lesVertices[27]=<-0.618034,0.0,-0.8506508>;
#declare lesVertices[28]=<-0.2763932,-0.5527864,-0.8506508>;
#declare lesVertices[29]=<0.0,0.0,-1.051462>;
#declare lesVertices[30]=<-0.2472136,0.4,0.7608451600000001>;
#declare lesVertices[31]=<0.2472136,-0.4,0.7608451600000001>;
#declare lesVertices[32]=<0.6472136,0.4,0.47022820000000004>;
#declare lesVertices[33]=<-0.6472136,-0.4,0.47022820000000004>;
#declare lesVertices[34]=<0.8,-0.4,1.1102230246251566E-17>;
#declare lesVertices[35]=<-5.551115123125783E-18,0.8944272,0.0>;
#declare lesVertices[36]=<-0.8,0.4,1.1102230246251566E-17>;
#declare lesVertices[37]=<5.551115123125783E-18,-0.8944272,0.0>;
#declare lesVertices[38]=<0.6472136000000001,0.4,-0.47022820000000004>;
#declare lesVertices[39]=<-0.6472136000000001,-0.4,-0.47022820000000004>;
#declare lesVertices[40]=<0.2472136,-0.4,-0.76084516>;
#declare lesVertices[41]=<-0.2472136,0.4,-0.7608451599999999>;
